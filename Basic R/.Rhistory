ggplot2::mpg
?mpg
library(tidyverse)
ggplot(data = mpg, aes(x = displ,
y = hwy),
colour = displ) +
geom_point()
ggplot(data = mpg, aes(x = displ,
y = hwy),
colour = displ) +
geom_point() +
labs(title = "Does car with big engines use more fuel")
view(mpg)
#aesthetic mapping, map a 3rd variable to the graph
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
color = class))  #aesthetic/ visual property of the graph
#aesthetic mapping, map a 3rd variable to the graph
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
color = trans))  #aesthetic/ visual property of the graph
#aesthetic mapping, map a 3rd variable to the graph
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
color = model))  #aesthetic/ visual property of the graph
#aesthetic mapping, map a 3rd variable to the graph
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
color = class))  #aesthetic/ visual property of the graph
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
alpha = class)) #alpha= controls the transparency of the dot
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
),
colour = "Blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
),
colour = "Blue",
shape = "Square") #assign the aesthetic property manually, the colour doesnt convey any var
?shape
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
),
colour = "Blue",
shape = "5") #assign the aesthetic property manually, the colour doesnt convey any var
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
),
colour = "Blue",
shape = 5) #assign the aesthetic property manually, the colour doesnt convey any var
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
),
colour = "Blue",
shape = 17) #assign the aesthetic property manually, the colour doesnt convey any var
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
),
colour = "Blue",
shape = 23) #assign the aesthetic property manually, the colour doesnt convey any var
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
),
colour = "Blue",
shape = 14) #assign the aesthetic property manually, the colour doesnt convey any var
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
color = "blue"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
color = "Blue"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
color = Blue))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ,
y = hwy,
color = blue))
?color
?stroke
?geom_point
?geom_point
ggplot(mpg, aes(displ, hwy)) +
geom_point(shape = 21, colour = "red", fill = "blue", size = 5, stroke = 5)
ggplot(mpg, aes(displ, hwy)) +
geom_point(shape = 21, colour = "red", fill = "blue", size = 5, stroke = 2)
?ggplot
ggplot(mpg, aes(displ, hwy, colour = displ < 5)) +
geom_point()
ggplot(mpg, aes(displ, hwy, colour = hwy < 25)) +
geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_wrap(~class, nrow = 2)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_grid(manufacturer ~ year)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_grid(drv ~ cyl
)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_grid(cyl ~ drv)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_grid(. ~ drv)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_grid(drv ~ .) #if only want 1 more var instead of 2
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
facet_grid(. ~ drv) #if only want 1 more var instead of 2
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl)) +
facet_grid(drv ~ cyl)
#geometric objects
ggplot(mpg, aes(displ, hwy)) +
geom_smooth(colour = displ < 5)
#geometric objects
ggplot(mpg, aes(displ, hwy, colour = displ < 5)) +
geom_smooth()
#geometric objects
ggplot(mpg, aes(displ, hwy, colour = displ <= 5)) +
geom_smooth()
#geometric objects
ggplot(mpg, aes(displ, hwy)) +
geom_smooth()
dev.off
dev.off()
dev.off
dev.off
pdf("geom_smooth.pdf")
ggplot(mpg, aes(displ, hwy)) +
geom_smooth()
dev.off
getwd
getwd()
sewd
setwd("E:/R lessons/Basic R")
library(faithful)
head(faithful)
library(tidyverse)
ggplot(faithful, aes(eruption, waiting))+
geom_pointrange()+
geom_abline()
ggplot(faithful, aes(eruptions, waiting))+
geom_pointrange()+
geom_abline()
ggplot(faithful, aes(eruptions, waiting))+
geom_smooth()+
geom_abline()
ggplot(faithful, aes(eruptions, waiting))+
geom_point()+
geom_abline()
duration <- faithful$eruptions
range(duration)
?break
breaks <- break(1.5,5.5, by=0.5)
breaks <- seq(1.5,5.5, by=0.5)
?seq
?cut
duration_cut <- cut(duration, breaks,right = F)
duration_freq <- table(duration_cut)
(duration_freq <- table(duration_cut))
cbind(duration_freq)
waiting_time <- faithful$waiting
range(waiting_time)
breaks_1 <- seq(40, 100, by=5)
waiting_time_cut <- cut(waiting_time, breaks_1, right = F)
cbind(waiting_time_cut)
waiting_time <- faithful$waiting
range(waiting_time)
breaks_1 <- seq(40, 100, by=10)
waiting_time_cut <- cut(waiting_time, breaks_1, right = F)
cbind(waiting_time_cut)
waiting_time <- faithful$waiting
range(waiting_time)
breaks <- seq(40, 100, by=10)
waiting_time_cut <- cut(waiting_time, breaks, right = F)
cbind(waiting_time_cut)
view(waiting_time)
waiting_time_freq <- table(waiting_time_cut)
cbind(waiting_time_freq)
cbind(duration_freq)
hist(duration_freq, plot = F)
hist(duration_freq, plot = T)
?hist
hist(duration_cut, plot = T)
ggplot(faithful, aes(duration))+
geom_histogram()
?geom_histogram
hist(duration_freq, plot = T)
hist(duration, plot = T)
?hist
breaks <- seq(1.5,5.5, by=0.5)
hist(duration, xlim= range(breaks))
hist(duration, xlim= c(0,6), breaks = 0.5)
hist(duration, xlim= c(0,6), breaks = 1)
hist(duration, xlim= c(0,6), breaks = 5)
hist(duration, xlim= c(1,6), ylim= c(0,80),breaks = 5)
hist(duration, xlim= c(1,6), ylim= c(0,80),breaks = 6)
hist(duration, xlim= c(1,6), ylim= c(0,80),breaks = 5)
hist(duration, xlim= c(1,6), ylim= c(0,80),breaks = 5, probability = T)
hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T)
line(density(duration))
lines(density(duration))
hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 10, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 1, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 2, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 3, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 4, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
hist(waiting_time,xlim = c(40,100), ylim = c(10,100), breaks = 5)
hist(waiting_time,xlim = c(40,100), ylim = c(0,100), breaks = 5)
hist(waiting_time,xlim = c(40,100), ylim = c(0,100), breaks = 10)
hist(waiting_time,xlim = c(40,100), ylim = c(0,70), breaks = 10)
library(extraGrid)
library(ExtraGrid)
library(gridExtra)
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
waiting_duration <- hist(waiting_time,xlim = c(40,100), ylim = c(0,70), breaks = 10)
grid.arrange(eurption_duration, waiting_duration, ncol=2)
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
waiting_duration <- hist(waiting_time,xlim = c(40,100), ylim = c(0,70), breaks = 10)
library(gridExtra)
grid.arrange(eurption_duration, waiting_duration, ncol=2)
grid.arrange(eurption_duration, waiting_duration, ncol=2, top = "Main Title")
grid.arrange(eurption_duration, waiting_duration, ncol=2)
par(mfrow= c(1,2))
plot(eurption_duration)
plot(waiting_duration)
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "Histogram of duration of valcano eruptions")
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
waiting_duration <- hist(waiting_time,xlim = c(40,100), ylim = c(0,70), breaks = 10)
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "Histogram of duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
waiting_duration <- hist(waiting_time,xlim = c(40,100), ylim = c(0,70), breaks = 10)
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
waiting_duration <- hist(waiting_time,xlim = c(40,100), ylim = c(0,70), breaks = 10)
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
waiting_duration <- hist(waiting_time,xlim = c(40,100), ylim = c(0,70), breaks = 10)
eurption_duration <- hist(duration, xlim= c(1,6), ylim= c(0,1),breaks = 5, probability = T,
main = "duration of valcano eruptions") #how to change x/y axis
lines(density(duration))
cbind(waiting_time_freq)
real_duration_freq= duration_freq/ nrow(faithful)
old = options(digits = 2)
cbind(duration_freq, real_duration_freq)
old = options(digits = 1)
cbind(duration_freq, real_duration_freq)
hist(real_duration_freq, xlim = c(1,6), ylim = c(0,1))
hist(table(real_duration_freq), xlim = c(1,6), ylim = c(0,1))
real_table <- table(real_duration_freq)
view(real_table)
real_waiting_time <- waitimg_time_freq/ nrow(faithful)
real_waiting_time <- waiting_time_freq/ nrow(faithful)
cbind(waiting_time_freq, real_waiting_time)
#cumulative freq
duration_cumfreq <- cumsum (duration_freq)
cbind(duration_freq, duration_cumfreq)
waiting_cumfreq <- cumsum(waiting_time_freq)
cbind(waiting_time_freq, waiting_cumfreq)
cumfreq0 <- c(0, duration_cumfreq)
plot(breaks, cumfreq0)
lines(breaks, cumfreq0)
plot(breaks, cumfreq0,
main = "Cumulative freq of eruption duration",
xlab = "duration time",
ylab = "cumulative eruptions")
lines(breaks, cumfreq0)
cum_waiting_freq0 <- c(0, waiting_cumfreq)
lines(breaks_1, cum_waiting_freq0)
cum_waiting_freq0 <- c(0, waiting_cumfreq)
plot(breaks_1, cum_waiting_freq0,
main = "Cumulative waiting time".
xlab = "Waiting time",
ylab = "Cumulative time")
lines(breaks_1, cum_waiting_freq0)
cum_waiting_freq0 <- c(0, waiting_cumfreq)
plot(breaks_1, cum_waiting_freq0,
main = "Cumulative waiting time",
xlab = "Waiting time",
ylab = "Cumulative time")
lines(breaks_1, cum_waiting_freq0)
plot(breaks, cumfreq0,
main = "Cumulative freq of eruption duration",
xlab = "duration time",
ylab = "cumulative eruptions")
lines(breaks, cumfreq0)
cumfreq0 <- c(0, duration_cumfreq)
plot(breaks, cumfreq0,
main = "Cumulative freq of eruption duration",
xlab = "duration time",
ylab = "cumulative eruptions",
ylim = c(0,300))
lines(breaks, cumfreq0)
cum_waiting_freq0 <- c(0, waiting_cumfreq)
plot(breaks_1, cum_waiting_freq0,
main = "Cumulative waiting time",
xlab = "Waiting time",
ylab = "Cumulative time")
lines(breaks_1, cum_waiting_freq0)
duration_cumrelfreq <- duration_cumfreq/ nrow(faithful)
waiting_cumrelfreq <- waiting_cumfreq/ nrow(faithful)
cbind(duration_cumfreq, duration_cumrelfreq)
cbind(waiting_cumfreq, waiting_cumrelfreq)
options(old)
old = options(digits = 2)
cbind(duration_cumfreq, duration_cumrelfreq)
cbind(waiting_cumfreq, waiting_cumrelfreq)
old = options(digits = 1)
cbind(duration_cumfreq, duration_cumrelfreq)
cbind(waiting_cumfreq, waiting_cumrelfreq)
duration_relcumfreq0 <- c(0, duration_cumrelfreq)
par(mfrow= c(2,2))
duration_relcumfreq0 <- c(0, duration_cumrelfreq)
plot(breaks, duration_relcumfreq0,
main = "Relative CumFreq of duration",
xlab = "Duration Time",
ylab = "RelCum Freq")
lines(breaks, duration_relcumfreq0)
waiting_relcumfreq0 <- c(0, waiting_cumrelfreq)
waiting_relcumfreq0 <- c(0, waiting_cumrelfreq)
plot(breaks_1, waiting_relcumfreq0,
main = "RelCum waiting freq",
xlab = "Waiting time",
ylab = "RelCum Freq"),
lines(breaks_1, waiting_relcumfreq0)
waiting_relcumfreq0 <- c(0, waiting_cumrelfreq)
plot(breaks_1, waiting_relcumfreq0,
main = "RelCum waiting freq",
xlab = "Waiting time",
ylab = "RelCum Freq")
lines(breaks_1, waiting_relcumfreq0)
plot(breaks_1, cum_waiting_freq0,
main = "Cumulative waiting time",
xlab = "Waiting time",
ylab = "Cumulative time")
lines(breaks_1, cum_waiting_freq0)
plot(breaks, cumfreq0,
main = "Cumulative freq of eruption duration",
xlab = "duration time",
ylab = "cumulative eruptions",
ylim = c(0,300))
lines(breaks, cumfreq0)
#ECDF, no need to compute relative cumulative freq first
fn <- ecdf(duration)
fn <- ecdf(duration)
plot(fn,
main= "ECDF of duration time",
xlab= "duration time",
ylab = "cumulative relFreq")
fn1 <- ecdf(waiting_time)
fn1 <- ecdf(waiting_time)
plot(fn1,
main="ECDF of waiting time".
xlab= "waiting time",
ylab= "cumulative relFreq")
fn1 <- ecdf(waiting_time)
plot(fn1,
main="ECDF of waiting time",
xlab= "waiting time",
ylab= "cumulative relFreq")
plot(breaks_1, waiting_relcumfreq0,
main = "RelCum waiting freq",
xlab = "Waiting time",
ylab = "RelCum Freq")
lines(breaks_1, waiting_relcumfreq0)
plot(breaks, duration_relcumfreq0,
main = "Relative CumFreq of duration",
xlab = "Duration Time",
ylab = "RelCum Freq")
lines(breaks, duration_relcumfreq0)
#stem leaf plot
stem(duration)
?abline
?lm
plot(duration, waiting_time,
main = "Eruption duration vs waiting time",
xlab = "Eruption duration",
ylab = "time waited")
abline(lm(duration~waiting_time))
abline(lm(waiting_time~duration))
